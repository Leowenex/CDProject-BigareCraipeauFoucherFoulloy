
def apiImage = ''
pipeline {

  agent {
    label 'jenkins-slave'
  }

  stages {
    stage('Cloning Git') {
      steps {
        git branch: 'main', credentialsId: 'Git', url: 'https://github.com/Leowenex/CDProject-BigareCraipeauFoucherFoulloy'
      }
    }
    stage('Building api image') {
      steps {
        script {
          dir('webapi') {
            apiImage = docker.build("leowenex/api-bcff:2025")
          }
        }
      }
    }
    stage('Publish api Image') {
      steps {
        script {
          withDockerRegistry(credentialsId: 'DockerHubLeowenex') {
            apiImage.push()
          }

        }
      }
    }

    stage('Deploy api container to Dev environment') {
      steps {
        dir('webapi-k8s') {
          withKubeConfig(caCertificate: '', clusterName: 'minikube', contextName: 'minikube', credentialsId: 'minikube-jenkins-secret', namespace: 'dev', restrictKubeConfigAccess: false, serverUrl: 'https://host.docker.internal:55068') {
            sh "helm upgrade --install api-bcff -n dev helm_dev"
          }
        }
      }
    }

    // Curl the service at /whoami to see if it's running and check the response is 200 and contains "BCFF"
    stage('Test api running on Dev environment') {
      steps {
        script {
          def response = sh(script: "curl -s -o /dev/null -w \"%{http_code}\" http://192.168.27.66:9988/whoami", returnStdout: true).trim()
          if (response != '200') {
            error "Failed to curl the service"
          }
          response = sh(script: "curl -s http://192.168.27.66:9988/whoami", returnStdout: true).trim()
          if (!response.contains("BCFF")) {
            error "Response does not contain BCFF"
          }
        }
      }
    }

    stage('Deploy api container to Prod environment') {
      steps {
        dir('webapi-k8s') {
          withKubeConfig(caCertificate: '', clusterName: 'minikube', contextName: 'minikube', credentialsId: 'minikube-jenkins-secret', namespace: 'prod', restrictKubeConfigAccess: false, serverUrl: 'https://host.docker.internal:55068') {
            sh "helm upgrade --install api-bcff -n prod helm_prod"
          }
        }
      }
    }
  }
}
